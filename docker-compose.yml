version: '3.7'
services:
    nginx:
        build: ./nginx
        ports:
            - 80:80
        volumes:
            - .:/app:rw
        depends_on:
            - django
        restart: "on-failure"
    django:
        build: .
        command: >
            sh -c "python carbon_friendly_api/manage.py migrate && 
            gunicorn carbon_friendly_api.wsgi:application --bind 0.0.0.0:8000 --chdir carbon_friendly_api
            "
        environment:
            - DEBUG=${DEBUG}
            - EMAIL_HOST=${EMAIL_HOST}
            - EMAIL_HOST_USER=${EMAIL_HOST_USER}
            - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
            - SECRET_KEY=${SECRET_KEY}
            - ALLOWED_HOSTS=${ALLOWED_HOSTS}
        image: django
        expose:
            - 8000
        restart: "on-failure"
        volumes:
            - .:/app:rw
    redis:
        image: redis:alpine
    celery-worker:
        build: .
        working_dir: /app/carbon_friendly_api
        command: celery -A carbon_friendly_api worker -l info
        environment:
            - DEBUG=${DEBUG}
            - EMAIL_HOST=${EMAIL_HOST}
            - EMAIL_HOST_USER=${EMAIL_HOST_USER}
            - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
            - SECRET_KEY=${SECRET_KEY}
            - ALLOWED_HOSTS=${ALLOWED_HOSTS}
        volumes:
            - .:/app:rw
        depends_on:
            - redis
        restart: "on-failure"
    celery-beat:
        build: .
        working_dir: /app/carbon_friendly_api
        command: celery -A carbon_friendly_api beat -l info
        environment:
            - DEBUG=${DEBUG}
            - EMAIL_HOST=${EMAIL_HOST}
            - EMAIL_HOST_USER=${EMAIL_HOST_USER}
            - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
            - SECRET_KEY=${SECRET_KEY}
            - ALLOWED_HOSTS=${ALLOWED_HOSTS}
        volumes:
            - .:/app:rw
        depends_on:
            - redis
        restart: "on-failure"
